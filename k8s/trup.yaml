apiVersion: v1
kind: ConfigMap
metadata:
  name: bot-config
  namespace: trup
data:
  GUILD: "635612648934735892"
  ROLE_MOD: "635627371789025291"
  ROLE_HELPER: "803967165492756500"
  ROLE_MUTE: "656025214144086016"
  ROLE_COLORS: "802853302119301150,802853357265223713,662943065279037440,815655338140368897,662943483350220800,662945185021427754,662943741643980820,802853432339464222,662944183899783168,802853497309233173,662943819679137812,662943910892666911,804402539725586503,802853518528348170,662944036650483722,804413861427413072"
  CHANNEL_SHOWCASE: "635625917623828520"
  CHANNEL_FEEDBACK: "656253109802369034"
  CHANNEL_MODLOG: "635627264343670795"
  CHANNEL_AUTO_MOD: "747909797847891979"
  CHANNEL_BOT_MESSAGES: "673003438635876382"
  CHANNEL_BOT_TRAFFIC: "747909927451754547"
  CATEGORY_MOD_PRIVATE: "635627141123538966"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pv-claim
  namespace: trup
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-statefulset
  namespace: trup
  labels:
    app: db
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: postgres
          image: postgres:11
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_USER
              value: root
            - name: POSTGRES_DB
              value: trup
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: trup
  labels:
    app: db
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      name: postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot
  namespace: trup
  labels:
    app: bot
spec:
  selector:
    matchLabels:
      app: bot
  replicas: 1
  template:
    metadata:
      labels:
        app: bot
    spec:
      containers:
        - name: bot
          image: mlvzk/trup
          envFrom:
            - secretRef:
                name: discord-creds
            - configMapRef:
                name: bot-config
          env:
            - name: DATABASE_URL
              value: "postgres://root@db/trup"

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: db-backup
  namespace: trup
spec:
  schedule: "@daily"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          containers:
            - name: db-backup
              image: mlvzk/trup-db-backup
              volumeMounts:
                - name: ssh-key
                  mountPath: "/etc/ssh-key/"
                  readOnly: true
              env:
                - name: DATABASE_URL
                  value: "postgres://root@db/trup"
                - name: GIT_SSH_COMMAND
                  value: "ssh -i /etc/ssh-key/ssh-privatekey -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
                - name: USER_EMAIL
                  value: "trup@prod"
          restartPolicy: Never
          volumes:
            - name: ssh-key
              secret:
                secretName: db-backup-ssh-key
                defaultMode: 0600

